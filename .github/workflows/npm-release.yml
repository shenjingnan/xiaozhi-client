name: NPM 发布

on:
  workflow_dispatch:
    inputs:
      version_type:
        description: "版本类型"
        required: true
        default: "测试版"
        type: choice
        options:
          - "正式版"
          - "测试版"
          - "候选版"
      version_increment:
        description: "版本增量"
        required: true
        default: "patch"
        type: choice
        options:
          - "patch"
          - "minor"
          - "major"
      dry_run:
        description: "预演模式（仅预览，不实际发布）"
        required: true
        default: false
        type: boolean

permissions:
  contents: read

jobs:
  npm-release:
    name: NPM 发布
    runs-on: ubuntu-latest
    concurrency:
      group: npm-release-${{ github.ref }}
      cancel-in-progress: false
    permissions:
      contents: write
      issues: write
      pull-requests: write
      id-token: write
    steps:
      - name: 检出代码
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: 安装 pnpm
        uses: pnpm/action-setup@v4
        with:
          version: latest

      - name: 设置 Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: ".nvmrc"
          cache: "pnpm"
          registry-url: "https://registry.npmjs.org"

      - name: 安装依赖
        run: pnpm install --frozen-lockfile

      - name: 执行 NPM 发布流程
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
          GITHUB_REPOSITORY: ${{ github.repository }}
        run: |
          # 构建发布脚本参数
          RELEASE_ARGS=""

          # 添加版本类型参数
          RELEASE_ARGS="$RELEASE_ARGS --version-type=${{ github.event.inputs.version_type }}"

          # 添加版本增量参数
          RELEASE_ARGS="$RELEASE_ARGS --version-increment=${{ github.event.inputs.version_increment }}"

          # 添加选项参数
          if [ "${{ github.event.inputs.dry_run }}" = "true" ]; then
            RELEASE_ARGS="$RELEASE_ARGS --dry-run"
          fi

          echo "🚀 执行发布脚本: pnpm run release$RELEASE_ARGS"
          npm version 1.6.4-beta.21 --no-git-tag-version && pnpm publish --tag beta --no-git-checks && git checkout package.json
          # pnpm run release$RELEASE_ARGS
